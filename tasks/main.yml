---
# tasks file for arillso.mariadb

- name: add OS specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
        - "defaults.yml"
      paths:
        - "vars"
  tags:
    - configuration
    - packages

- name: Distribution | Include
  include_tasks: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
        - "defaults.yml"
      paths:
        - "distribution"
  tags:
    - configuration
    - packages

- name: install mariadb
  package:
    name: '{{ mariadb_packages }}'
    state: present
  notify:
    - 'mariadb restart daemon'
    - 'mariadb remove anonymous users'
    - 'mariadb remove test database'
  tags:
    - packages

- name: create mariadb configuration
  template:
    src: etc/my.cnf.j2
    dest: '{{ mariadb_conf }}'
    owner: root
    group: root
    mode: 0644
  notify:
    - 'mariadb check config and restart'
  tags:
    - configuration

- name: create mariadb component configurations
  template:
    src: etc/conf.d/{{ item }}.cnf.j2
    dest: '{{ mariadb_conf_dir }}/{{ item }}.cnf'
    owner: root
    group: root
    mode: 06440
  with_items: '{{ mariadb_conf_files }}'
  notify:
    - 'mariadb check config and restart'
  tags:
    - configuration

- name: enable mariadb service
  service:
    name: '{{ mariadb_service }}'
    state: started
    enabled: yes
  tags:
    - configuration

- name: check if root my.cnf exists
  stat:
    path: '{{ mariadb_root_mycnf }}'
  register: mariadb_register_root_mycnf
  tags:
    - configuration

- block:
    - name: generates the root password
      set_fact:
        mariadb_root_password: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters') }}"

    - name: create root password
      mysql_user:
        name: root
        host_all: yes
        password: '{{ mariadb_root_password }}'
        update_password: always
        check_implicit_admin: yes
        login_unix_socket: '{{ mariadb_socket }}'
        state: present

    - name: create root my.cnf
      template:
        src: root/my.cnf.j2
        dest: '{{ mariadb_root_mycnf }}'
        owner: root
        group: root
        mode: 0600
  when: not mariadb_register_root_mycnf.stat.exists
  tags:
    - configuration

- name: flush handlers
  meta: flush_handlers
  tags:
    - configuration
    - packages
